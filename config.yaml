# This is the configuration file for loco-pipe.
# Please read it through and make edits when needed.
# Importantly, please copy this file to the "config" folder in your project base directory,
# and make your edits there rather in the "loco-pipe" directory. 

# =======================================================================================================================
#     Decide which analyses you want to include
# =======================================================================================================================

# -----------------------------------------------------------------------------------------------------------------------
# Here, you can select which analyses you would like to include in the pipeline. 
# Note that if you do not have a grouping variable to run the population-level (or "local") analyses with, make sure the
# following "to_include" switches are turned "false": run_pcangsd_local, run_ohana_local, get_maf, get_fst, and get_theta.
# Also, if you turn a downstream analysis to "true"", all its dependencies will run even if they are turned to "false".
# -----------------------------------------------------------------------------------------------------------------------
to_include:

  # To call SNPs with all samples.
  snp_calling_global: true
  
  # To perform PCA using PCAngsd for all samples and plot the result. 
  run_pcangsd_global: true
  
  # To perform PCA using PCAngsd for each population separately and plot the result. 
  run_pcangsd_local: true

  # To conduct admixture analysis using Ohana for all samples and plot the result.
  run_ohana_global: true
  
  # To conduct admixture analysis using Ohana for each population separately and plot the result.
  run_ohana_local: true

  # To estimate minor allele frequency in each population separately.
  get_maf: true

  # To estimate Fst in pairs of populations per SNP and in windows, and plot the result.
  get_fst: true

  # To estimate the genome-wide average heterozygosity for each sample separately and plot the result.
  get_heterozygosity: true
  
  # To get different estimates of theta (e.g. nucleotide diversity Ï€, Watterson's theta)
  # as well as neutrality test statistics (e.g. Tajima's D) for each population 
  # (in fixed length windows and as chromosome averages), and plot the result.
  get_theta: true
  
  # To conduct the local PCA analysis with the lostruct package in R for all samples and plot the result.
  run_lostruct_global: true

# =======================================================================================================================
#     Adjust mandatory pipeline parameters that are going to be used regardless of which analyses have been selected
# =======================================================================================================================

# -----------------------------------------------------------------------------------------------------------------------
# The following parameters are needed for multiple analyses
# -----------------------------------------------------------------------------------------------------------------------
global:

  # Full path of the project base directory. 
  # This folder should contain subfolders such as "config" and "docs".
  basedir: "/path/to/loco-pipe/toyfish"
  
  # Full path of the reference genome.
  # The reference genome should be in fasta format. Under the current version, we recommend reference genome 
  # to be approximately at chromosome level. In other words, we advice against a highly fragmented reference genome
  # (e.g. L80 > 100). Due to the fact that many downstream analyses are performed at chromosome/scaffold/contig level,
  # having a highly-fragmented reference genome will create too many parallel jobs and might put cluster in high stress.
  reference: "/path/to/loco-pipe/toyfish/reference/toy_refgen.fa"

  # Full path of the folder in which R scripts required for the pipeline are saved (i.e. you will need to change the 
  # "/path/to/" part to the path where loco-pipe is downloaded on your computer.)
  scriptdir: "/path/to/loco-pipe/workflow/scripts"
  
  # The name of the tab-separated sample table file.
  # It should include at least three columns: "sample_name", "bam", and a third column that specifies the grouping 
  # information. If you do not have a grouping variable a priori when first running loco-pipe, please make sure to 
  # create a fake column in your dataset with all samples having the same entry.
  sample_table: "sample_table.tsv"

  # The name of a column in the sample table that specifies the grouping information.
  # If you do not have a grouping variable a priori when first running loco-pipe, enter the name of the fake column.
  pop_level: "species"

  # The name of the tab-separated chromosme table. 
  # It should have one or two unnamed columns. The first column should contain the original
  # chromosome/scaffold/contig names that you would like to include in the analysis. These should exactly match
  # the names in the reference genome. The second column is optional, and it should contain the new names
  # that would be shown in Manhattan-style plots. Shorter, simpler names are recommended for clarity of the plots.
  chr_table: "chr_table.tsv"
  
  # The genotype likelihood model to be used in ANGSD. Enter 1 for the Samtools model and 2 for the GATK model. 
  # See https://www.popgen.dk/angsd/index.php/Genotype_Likelihoods for details.
  gl_model: 1
  
  # Type of reference genome. Enter 0 if the reference genome is either ancestral or from an outgroup, and 1 if not.
  # If 0 is entered, loco-pipe will estimates unfolded SFS for certain analytical steps. 
  # If 1 is entered, loco-pipe will estimates folded SFS. 
  ref_type: 1
  
# -----------------------------------------------------------------------------------------------------------------------
# The following parameters are needed by the Snakefile "get_depth_global.smk". This file returns depth distribution
#  of every site summed over all samples. Each chromosome will be processed individually.
# -----------------------------------------------------------------------------------------------------------------------
get_depth_global:
  
  # The minimum base quality score.
  # Sequencing data below this threshold will be filtered out and not included in the depth counting.
  # This same filter is going to be applied to all SNP-based analyses, 
  # but you can choose a different minq filter for genetic diversity estimation.
  minq: "20"
  
  # The minimum mapping quality score.
  # A sequencing read that is below this threshold will be filtered out and not included in the depth counting.
  # This same filter is going to be applied to all SNP-based analyses, 
  # but you can choose a different minq filter for genetic diversity estimation.
  minmapq: "20"
  
  # The number of threads in the cluster needed for this job.
  # A thread could be seen as a computing unit. Generally, the more threads you assign,
  # the faster the job could be done. For this step, the maximum number of threads that
  # ANGSD can take advantage of is about 8.
  # This same parameter will be used in all subsequent ANGSD steps, other than ones that involve the realSFS submodule,
  # which can take advantage of more threads, and you can specify those in the relevant sections below. 
  threads: 8
  
  # Optional arguments to be passed to ANGSD -doDepth.
  # These arguments could be extra filtering parameters, extra analyses, etc.
  extra: ""

# -----------------------------------------------------------------------------------------------------------------------
# The following parameters are needed by the "get_depth_filter_global.smk" file,
# which establishes depth filters to exclude the sites that are poorly mapped or repetitive from all subsequent analyses.
# -----------------------------------------------------------------------------------------------------------------------
get_depth_filter_global:

  # Number of standard deviation the min and max depth filter will be set away from the mean fitted depth. 
  # The larger this number is, the more relaxed the depth filters will be. We recommend you to always check the depth
  # distribution plot (i.e. angsd/get_depth_global/depth_filter.png) to make sure that the filters make sense. This plot 
  # is generated by the get_depth_filter_global rule, so if you want to change "n_sd"" after seeing the depth distribution
  # plot, you should first stop the pipeline, change the n_sd value below, delete the plot, and rerun the pipeline.
  # It is also possible to use your own depth filters by changing the "min_filter" and "max_filter" values manually 
  # in angsd/get_depth_global/depth_filter.tsv
  n_sd: 2

# =======================================================================================================================
#     Adjust additional pipeline parameters for analyses that are you selected 
# =======================================================================================================================

# -----------------------------------------------------------------------------------------------------------------------
# The following parameters are needed by the "snp_calling_global.smk" file, which will find a set of single
# nucleotide polymorphisms (SNP) across all samples. Each chromosome will be processed individually.
# -----------------------------------------------------------------------------------------------------------------------
snp_calling_global:
  
  # The minimum PROPORTION of samples that have to have read depth equal to or greater than 
  # the value set by "mindepthind" (see below) for a site to be considered in the analysis.
  # The sites that have fewer samples passing this threshold will be filtered out. 
  # Note that there is no standarized rule for setting "minind_proportion". The choice depends on the
  # sequencing depth and its evenness across samples. Since additional depth filteres are 
  # automatically applied in this step, we often choose a relatively relaxed minind filter. 
  # For example, with coverage around 1-2x among samples,
  # we often use half of the total sample size (i.e. 0.5).
  minind_proportion: "0.5"
 
  # This filter is used in combination with "minind_proportion" (see above). The default setting is 1, 
  # meaning that a sample needs to have at least 1 read at a site for it to be counted for the "minind" filter.
  # We suggest that you use stick with the default setting unless there are compelling reasons to use a different value.
  mindepthind: "1"
  
  # The minimum allele frequency threshold for a site to be considered in the analysis.
  # The site that has a smaller minor allele frequency that "minmaf" will be filtered out.
  minmaf: "0.05"
  
  # Threshold for a site to be considered as a SNP based on its p-value.
  # The site that has a p-value larger than "pval" will be filtered out.
  pval: "1e-6"
  
  # Optional arguments to be passed to the SNP calling step in ANGSD.
  # These arguments could add extra input files to analyses (e.g. ancestral genome and individual inbreed coefficients). 
  # They can also be used to specify additional filters or additional analyses.
  # For example, users can use the "-site" flag here to constrain analysis on a predefined set of SNPs
  # Or, users can use the "-rmTriallelic" flag followed by a p-value threshold to remove sites with more than two alleles.
  extra: ""

# -----------------------------------------------------------------------------------------------------------------------
# The following parameters are needed by the "subset_snp_list.smk" file to thin the SNP list and 
# beagle-formatted genotype liklihood files for certain downstream analyses that include all samples.
# This is an attempt to limit the effect of linkage disequibrium and reduce the computational burden for 
# certain downstream analyses (e.g. PCA and admixture analysis).
# -----------------------------------------------------------------------------------------------------------------------
subset_snp_list_global:

  # The SNPs subsetting is done by choosing 1 SNP out of every n number of SNPs.
  # If n = 100, we are picking the first SNP out of every 100 SNPs along the genome. 
  # The larger "n" is, the fewer SNPs are retained in the subsetted list.
  # Note that since toyfish is already heavily subsetted, we are using a small number here.
  # You will likely need to enter a much larger number when using a real dataset.
  n: 3

# -----------------------------------------------------------------------------------------------------------------------
# The following parameters are similar to the ones above, but are used to thin the SNP list and 
# beagle-formatted genotype liklihood files by population instead of with all samples.
# -----------------------------------------------------------------------------------------------------------------------
subset_snp_list_local: 
 
  # The SNPs subsetting is done by choosing 1 SNP out of every n number of SNPs.
  # If n = 100, we are picking the first SNP out of the 100 continuous SNPs.
  # The larger "n" is, the fewer SNPs are retained in the subsetted list.
  # Note that since toyfish is already heavily subsetted, we are using a small number here.
  # You will likely need to enter a much larger number when using a real dataset.
  n: 3

# -----------------------------------------------------------------------------------------------------------------------
# The following parameters are needed by the "run_pcangsd_global" rule in the "run_pcangsd.smk" file 
# that conducts PCA using the PCAngsd software across all samples.
# More information about PCAngsd could be found on this webpage: https://github.com/Rosemeis/pcangsd.
# -----------------------------------------------------------------------------------------------------------------------
run_pcangsd_global:
  
  # Minimum minor allele frequency for a site to be considered in PCA. 
  minmaf: 0.05
  
  # Number of threads PCAngsd uses. This is also passed to the steps where PCAngsd in the used in local PCA 
  threads: 8

  # The name of a column in the sample table which you want to color the PCA plot by.
  # If you do not have a grouping color, use the name of the fake column that you create.
  color_by: "population"

# -----------------------------------------------------------------------------------------------------------------------
# The following parameters are similar to the ones above, but they are needed by the "run_pcangsd_local" rule
# in the "run_pcangsd.smk" file that conducts PCA in each population separately.
# -----------------------------------------------------------------------------------------------------------------------
run_pcangsd_local:
  
  # Minimum minor allele frequency for a site to be considered in PCA. 
  minmaf: 0.05
  
  # Number of threads PCAngsd uses.
  threads: 8

  # The name of a column in the sample table which you want to color the PCA plot by.
  color_by: "population"

# -----------------------------------------------------------------------------------------------------------------------
# The following parameters are needed by the "run_ohana_global" rule in the "run_ohana.smk" file that 
# conducts admix analysis using the ohana software across all samples.
# More information about ohana could be found on this webpage: https://github.com/jade-cheng/ohana.
# -----------------------------------------------------------------------------------------------------------------------
run_ohana_global:

  # The minimum number of K (i.e. the number of ancestral/source population components assumed in the sample).
  min_k: 2
  
  # The maximum number of K (i.e. the number of ancestral/source population components assumed in the sample).
  max_k: 7
  
  # The name of a column in the sample table which you want to facet the admixture plot by.
  # If you do not have a grouping color, use the name of the fake column that you create.
  group_by: "population"

# -----------------------------------------------------------------------------------------------------------------------
# The following parameters are similar to the above, but they are needed by the "run_ohana_local" rule 
# in the "run_ohana.smk" file that conducts admix analysis in each population.
# -----------------------------------------------------------------------------------------------------------------------
run_ohana_local:

  # The minimum number of K (i.e. the number of ancestral/source population components assumed in the sample).
  min_k: 2
  
  # The maximum number of K (i.e. the number of ancestral/source population components assumed in the sample).
  max_k: 4
  
  # The name of a column in the sample table which you want to facet the admixture plot by.
  group_by: "population"

# -----------------------------------------------------------------------------------------------------------------------
# The following parameters are needed by the "get_maf.smk" file which estimates minor allele frequencies per population. 
# -----------------------------------------------------------------------------------------------------------------------
get_maf:

  # The minimum NUMBER of samples IN A POPULATION that have to have read depth equal to or greater than 
  # the value set by "mindepthind" (see below) for a site to be considered in the analysis.
  # The sites that have fewer samples passing this threshold will be filtered out. 
  # Note that this is different from the "minind_proportion" filter used in global_snp_calling, 
  # as it specifies a NUMBER of samples instead of a PROPORTION out of the total sample size .
  # The default setting is 1, meaning that a site only needs to be covered by 1 sample in a population with read depth equal to 
  # or greater than "mindepthind" for it to be considered.
  minind: "1"
  
  # This filter is used in combination with "minind" (see above). The default setting is 1, 
  # meaning that a sample needs to have at least 1 read at a site for it to be counted for the "minind" filter.
  # We suggest that you stick with the default setting unless there are compelling reasons to use a different value.
  mindepthind: "1"
  
  # Optional arguments to be passed to maf estimation per population in ANGSD.
  # These arguments could add extra input files to analyses (e.g. individual inbreed coefficients). 
  # They can also be used to specify additional filters or additional analyses.
  extra: ""

# -----------------------------------------------------------------------------------------------------------------------
# The following parameters are needed by the "get_fst.smk" file which estimates and plot Fst in pairs of populations 
# (per-SNP, windowed, and chromosome-average Fst).
# -----------------------------------------------------------------------------------------------------------------------
get_fst:

  # The number of threads in the cluster needed for this job.
  # For this step, the realSFS in ANGSD module is capable of using more than 8 threads.
  threads: 8
  
  # Optional arguments to be passed to the realSFS module in ANGSD.
  extra: ""
 
  # The number of SNPs to be included into each fixed-SNP window.
  snp_window_size: 100
  
  # The number of bases to be included into each fixed-length window.
  bp_window_size: 10000
  
  # Height of the Manhattan plot, in inches.
  fig_height: 3
  
  # Width of the Manhattan plot, in inches. You will likely need to enter a much larger number when using a real dataset.
  fig_width: 3

# -----------------------------------------------------------------------------------------------------------------------
# The following parameters are needed by the "get_heterozygosity.smk" file, which generates individual-level genome-wide 
# average heterozygosity estimates for each sample and plots the result.
# More details on heterozygosity estimation can be found on this webpage: 
# http://www.popgen.dk/angsd/index.php/Heterozygosity.
# -----------------------------------------------------------------------------------------------------------------------
get_heterozygosity:

  # The number of threads in the cluster needed for this job.
  # A thread could be seen as a computing unit. Generally, the more threads you assign,
  # the faster the job could be done. For this step, the realSFS in ANGSD module is capable of using more than 8 threads.
  threads: 8
  
  # The minimum base quality score.
  # Sequencing data below this threshold will be filtered out and not included in the heterozygosity estimation.
  minq: "20"
  
  # The minimum mapping quality score.
  # A sequencing read that is below this threshold will be filtered out and not included in the heterozygosity estimation.
  minmapq: "20"
  
  # Optional arguments to be passed to ANGSD -doSaf.
  dosaf_extra: ""
  
  # Optional arguments to be passed to ANGSD function realSFS.
  # The two parameters, -tole and -maxIter, are used to determine when the optimization algorithm stops. 
  # The -tole flag is an shortened for "tolerance for breaking Expectation Maximization".
  # The -maxIter flag is shortened for "maximum iteration".
  # Decreasing "-tole" and increasing "-maxIter" will increase computational time but may make the result more accurate.
  realsfs_extra: "-tole 1e-08 -maxIter 500"

  # The name of a column inside the sample table which you want to color the heterozygosity plot by.
  # If you do not have a grouping color, use the name of the fake column that you create.
  color_by: "population"
  
# -----------------------------------------------------------------------------------------------------------------------
# The following parameters are needed by the "get_theta.smk" file, which gets different estimators of theta 
# (e.g. nucleotide diversity Ï€, Watterson's theta) as well as neutrality test statistics (e.g. Tajima's D) 
# for each population in fixed-length windows and plots the result.
# -----------------------------------------------------------------------------------------------------------------------
get_theta:

  # The number of threads in the cluster needed for this job.
  # A thread could be seen as a computing unit. Generally, the more threads you assign,
  # the faster the job could be done. For this step, the realSFS in ANGSD module is capable of using more than 8 threads.
  threads: 8
  
  # The minimum NUMBER of samples IN A POPULATION that have to have read depth equal to or greater than 
  # the value set by "mindepthind" (see below) for a site to be considered in the analysis.
  # The sites that have fewer samples passing this threshold will be filtered out. 
  # Note that this is different from the "minind_proportion" filter used in global_snp_calling, 
  # as it specifies a NUMBER of samples instead of a PROPORTION out of the total sample size .
  # The default setting is 1, meaning that a site only needs to be covered by 1 sample in a population with read depth equal to 
  # or greater than "mindepthind" for it to be considered.
  minind: "1"
  
  # This filter is used in combination with "minind" (see above). The default setting is 1, 
  # meaning that a sample needs to have at least 1 read at a site for it to be counted for the "minind" filter.
  # We suggest that you use stick with the default setting unless there are compelling reasons to use a different value.
  mindepthind: "1"
  
  # The minimum base quality score.
  # Sequencing data below this threshold will be filtered out and not included in the theta estimation.
  minq: 20
  
  # The minimum mapping quality score.
  # A sequencing read that is below this threshold will be filtered out and not included in the theta estimation.
  minmapq: 20
  
  # Window size in base pairs for theta estimation in sliding window.
  window_size: 10000
  
  # Step size in base pairs for theta estimation in sliding window.
  # When step size equals window size, the windows are non-overlapping, and there is no gap between them. 
  step_size: 10000
  
  # Optional arguments to be passed to ANGSD -doSaf.
  dosaf_extra: ""
  
  # Optional arguments to be passed to ANGSD function realSFS.
  realsfs_extra: ""
  
  # Height of the theta plot, in inches.
  fig_height: 5
  
  # Width of the theta plot, in inches. You will likely need to enter a much larger number when using a real dataset.
  fig_width: 5

# -----------------------------------------------------------------------------------------------------------------------
# The following parameters are needed by the "run_lostruct.smk" file, which runs local PCA with the lostruct package in R
# -----------------------------------------------------------------------------------------------------------------------
lostruct:

  # Number of SNPs in each window.
  # Note that since toyfish is already heavily subsetted, we are using a small number here.
  # You will likely need to enter a much larger number when using a real dataset.
  # The highest number of windows this pipeline can handle is 46340, so it's important to use a SNP window size that 
  # results in fewer (ideally a lot fewer) than 46340 windows in total across the genome.
  snp_window_size: 100
  
  # Minimum minor allele frequency filter when running the PCA.
  minmaf: 0.05
  
  # Number of top PCs to retain for each window.
  pc: 2
  
  # Number of top MDS axes to retain.
  k: 6
  
  # Number of threads that PCAngsd uses.
  threads: 8
  
  # z-value cutoff for a window to be considered an outlier.
  z_cutoff: 3
  
  # Height of the mds figure. 
  fig_height: 6

  # Width of the mds figure. You will likely need to enter a much larger number when using a real dataset.
  fig_width: 5
  
  # The name of a column in the sample table that you want to to color the points by in concensus PCA plots.
  # If you do not have a grouping color, use the name of the fake column that you create.
  color_by: "population"
